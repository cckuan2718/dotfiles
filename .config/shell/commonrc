#!/bin/sh

#
# aliases and functions for POSIX shell
#

#
# Aliases
#

# Base utils
alias bye='exit'
alias cls='clear'
alias cmpr='diff -uNp'
alias cp='cp -iv'
alias df='df -h'
alias du='du -ch'
alias e="${EDITOR:-vi}"
alias ll='ls -aFhl'
alias lld='ls -dFhl'
alias logout='exit'
alias mv='mv -iv'
alias p='ps -l'
alias pg="${PAGER:-less}"
alias pls='doas'
alias pwd='pwd -P'
alias quit='exit'
alias rm='rm -iv'
alias ta='tmux new-session -A -s'
alias tad='ta default'

if [ -x "$(command -v nvi)" ]; then
	alias vi='nvi'
fi

# OpenBSD Ports
alias portsql='sqlite3 /usr/local/share/sqlports'
alias portslol='make 2>&1 | /usr/ports/infrastructure/bin/portslogger .'
alias portsrc='cd $(make show=WRKSRC)'

# Miscellaneous
alias bc='bc -l'
alias cb=' xclip -filter -selection clipboard'
alias cbk="git --git-dir=${HOME}/.dotfiles/ --work-tree=${HOME}"
alias cweb='wget --mirror --convert-links --adjust-extension --page-requisites --no-parent'
alias g='git'
alias rsize='eval $(resize)'
alias tb="${TERM_BROWSER:-lynx}"
alias tman='tmux split-window -h -l 82 man'
alias trem='transmission-remote'
alias yt='youtube-dl --add-metadata --ignore-errors'
alias yta='youtube-dl --extract-audio --audio-format mp3 --embed-thumbnail'

# Bookmarks
alias cdbb="cd  "${HOME}/.local/bin"                       "
alias cdcac="cd "${XDG_CACHE_HOME:-${HOME}/.cache}"        "
alias cdcc="cd "${XDG_CONFIG_HOME:-${HOME}/.config}"      "
alias cddc="cd  "${HOME}/documents"                        "
alias cddd="cd  "${HOME}/downloads"                        "
alias cddt="cd  "${XDG_DATA_HOME:-${HOME}/.local/share}"   "
alias cdec='cd  /etc                                       '
alias cdmm="cd  "${HOME}/music"                            "
alias cdmn='cd  /mnt                                       '
alias cdpp="cd  "${HOME}/pictures"                         "
alias cdpt='cd   /usr/ports                                 '
alias cdsrc="cd "${HOME}/.local/src"                       "
alias cdtt="cd  "${HOME}/tmp"                              "
alias cdvv="cd  "${HOME}/videos"                           "

# doas or sudo
for command in 'doas' 'sudo'; do
	if [ -x "$(command -v "$p")" ]; then
		alias pls="$p"
		break
	fi
done

#
# Functions
#

# Fuzzy edit config files.
fec()
{
	find "${XDG_CONFIG_HOME:-${HOME}/.config}"                           \
	    -type f -maxdepth 3                                              \
	    \! -name '*db*'                                                  \
	    \! -name '*log*'                                                 \
	    \! -name '*pid*'                                                 \
	    \! -name '*sql*'                                                 \
	    \! -path '*GIMP*'                                                \
	    \! -path '*calibre*'                                             \
	    \! -path '*libreoffice*'                                         \
	    \! -path '*mpv/watch_later*'                                     \
	    \! -path '*plugin*'                                              \
	    \! -path '*stat*'                                                \
	    -print0                                                          \
	    | fzf --read0 --print0 -i -0 -1 -m -d 'config/' --with-nth='2..' \
	        --header='Fuzzy edit config files.'                          \
	    | xargs -0 -r ${EDITOR:-vi}
}

# Fuzzy edit scripts
fes()
{
	find "${HOME}/.local/bin/" "${HOME}/.local/lib/" -type f -print0       \
	    | fzf --read0 --print0 -i -0 -1 -m -d 'bin/|lib/' --with-nth='2..' \
	        --header='Fuzzy edit scripts.'                                 \
	    | xargs -0 -r ${EDITOR:-vi}
}

# Fuzzy cmd history
fh()
{
	if   [ -n "${KSH_VERSION}" ]; then
		print -s "$(
			fc -l 1                   \
			    | fzf --no-sort --tac \
			    | cut -f '2-'
		)"
	elif [ -n "${ZSH_VERSION}" ]   ; then
		print -z "$(
			fc -l 1                                                \
			| fzf --no-sort --tac                                  \
			| sed -E 's/[[:blank:]]*[[:digit:]]*\*?[[:blank:]]*//' \
			| sed 's/\\/\\\\/g'
		)"
	else
		printf 'fh: fh is only available in ksh/zsh\n' 1>&2
	fi
}
 
myip()
{ 
	printf 'External IPv4: %s\n' "$(curl --silent -4 http://ifconfig.co/)"
	printf 'External IPv6: %s\n' "$(curl --silent -6 http://ifconfig.co/)"
}

# cd on quit in nnn
n()
{
	# Block nesting of nnn in subshells
	if [ -n "${NNNLVL}" ] && [ "${NNNLVL:-0}" -ge 1 ]; then
		printf 'nnn is already running\n'
		return
	fi

	# To cd on quit only on ^G
	NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"

	nnn "$@"

	if [ -f "${NNN_TMPFILE}" ]; then
		. "${NNN_TMPFILE}"
		rm -f "${NNN_TMPFILE}" > /dev/null
	fi
}

# Generate and view port diff
portsdiff()
{
	cvs diff > "/usr/ports/mystuff/${PWD##*/}.diff"
	less "/usr/ports/mystuff/${PWD##*/}.diff"
}

# View port diff
portslessdiff()
{
	less "/usr/ports/mystuff/${PWD##*/}.diff"
}

# Grep in port Makefiles
portsgrep()
{
	cd /usr/ports && grep "$@" ./*/*/Makefile ./*/*/*/Makefile
}

# Shellcheck all scripts
sc()
{
	find "${HOME}/.local/bin/" "${HOME}/.local/lib/" -type f \
	    -exec shellcheck --exclude=SC2155 {} +
}

# search word in wordnet
sw()
{
	wn "$*" -over
	return 0
}

z()
{
	zathura "$@" &
}


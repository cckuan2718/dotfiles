#
# .kshrc for desktop
#

case "$-" in
#
# We are interactive
#
*i*)

#
# Ksh setting
#

set -o vi
set -o vi-tabcomplete

#
# Ksh completions
#

set -A complete_beet_1 -- \
    config \
    fields \
    help \
    import \
    list \
    modify \
    move \
    remove \
    stats \
    update \
    write

for cmd in 'cbk' 'g' 'git'; do
	set -A "complete_${cmd}_1" -- \
	    add am archive \
	    bisect branch bundle \
	    checkout cherry-pick citool clean clone commit config \
	    describe diff \
	    fetch format-patch \
	    gc grep gui \
	    init \
	    log \
	    merge mv \
	    notes \
	    pull push \
	    range-diff rebase remote reset restore revert rm \
	    shortlog show sparse-checkout stash status submodule switch \
	    tag \
	    worktree
	set -A "complete_${cmd}" -- \
	    master \
	    origin
done

set -A complete_cdio_1 -- \
    blank \
    cddbinfo cdid cdplay cdrip close \
    debug device \
    eject exit \
    help \
    info \
    next \
    pause play previous \
    quit \
    replay reset resume \
    set status stop \
    tao \
    volume \

set -A complete_make -- \
    build \
    checksum clean \
    extract \
    fake \
    fetch \
    install \
    makesum \
    modgo-gen-modules \
    package patch port-lib-depends-check \
    search show \
    test test-depends \
    uninstall update-patches update-plist

set -A complete_mpc_1 -- \
    add \
    cdprev channels clear clearerror \
    consume crop crossfade current \
    del disable \
    enable \
    find findadd \
    idle idleloop insert \
    list listall load ls lsplaylists \
    mixrampdb mixrampdelay move \
    next \
    outputs outputset \
    pause pause-if-playing play playlist prev prio \
    random repeat replaygain rescan rm \
    save search searchadd searchplay seek \
    sendmessage shuffle single stats \
    sticker stop subscribe \
    toggle toggleoutput \
    update \
    version volume \
    waitmessage \

set -A complete_pass -- \
    cp \
    edit \
    find \
    generate git grep \
    help \
    init insert \
    ls list \
    mv \
    otp \
    rm \
    show \
    version \

set -A complete_rcctl_1 -- \
    disable \
    enable \
    get \
    ls \
    order \
    restart \
    set \
    start \
    stop

set -A complete_rcctl_2 -- \
    accounting amd apmd avahi_daemon avahi_dnsconfd \
    bgpd bootparamd \
    check_quotas cron \
    dhcpd dhcrelay dhcrelay6 dvmrpd \
    eigrpd \
    ftpd ftpproxy ftpproxy6 \
    gitdaemon \
    hostapd hotplugd httpd \
    identd ifstated iked inetd ipsec isakmpd iscsid ldapd ldattach ldomd \
    ldpd library_aslr lockd lpd \
    messagebus mopd mountd mpd mrouted multicast \
    nfsd npppd nsd ntpd \
    ospf6d ospfd \
    pcscd pf pflogd portmap \
    rad radiusd rarpd rbootd relayd ripd route6d rsyncd \
    saslauthd sasyncd sensorsd slaacd slowcgi smtpd sndiod snmpd spamd \
    spamd_black spamlogd sshd statd switchd syslogd \
    tftpd tftpproxy transmission_daemon \
    unbound unwind \
    vmd \
    watchdogd wpa_supplicant wsmoused \
    xenodm \
    ypbind ypldap ypserv \

set -A complete_tmux_1 --  \
    attach-session attach \
    detach-client detach \
    has-session has \
    kill-server kill-session \
    list-clients lsc list-commands lscm list-sessions ls lock-client lockc \
    lock-session locks \
    new-session new \
    refresh-client refresh rename-session rename \
    show-messages showmsgs source-file source start-server start \
    suspend-client suspendc switch-client switchc

#
# Aliases
#

# Base utils
alias cls='clear'
alias cmpr='diff -uNp'
alias cp='cp -iv'
alias df='df -h'
alias du='du -ch'
alias ll='ls -aFhl'
alias lld='ls -dFhl'
alias mv='mv -iv'
alias p='ps -l'
alias pwd='pwd -P'
alias rm='rm -iv'
alias svi='doas vi'

# Ksh
alias bye='exit'
alias h='fc -l | more'
alias j='jobs'
alias logout='exit'
alias o='fg %-'
alias quit='exit'
alias r='fc -s'

# OpenBSD Ports
alias portsql='sqlite3 /usr/local/share/sqlports'
alias portslol='make 2>&1 | /usr/ports/infrastructure/bin/portslogger .'
alias portsrc='cd $(make show=WRKSRC)'

# Miscellaneous
alias bc='bc -l'
alias cbk="/usr/local/bin/git --git-dir=${HOME}/.dotfiles/ --work-tree=${HOME}"
alias cweb='wget --mirror --convert-links --adjust-extension --page-requisites --no-parent'
alias e="${EDITOR}"
alias g='git'
alias irssi="irssi --home="${XDG_CONFIG_HOME:-${HOME}/.config}/irssi""
alias lynx='lynx -vikeys -accept_all_cookies -scrollbar'
alias pg="${PAGER}"
alias rsize='eval $(resize)'
alias tad='tmux new-session -A -s default'
alias tai="tmux new-session -A -s irssi irssi --home=${XDG_CONFIG_HOME:-${HOME}/.config}/irssi"
alias tmux="tmux -f "${XDG_CONFIG_HOME:-${HOME}/.config}/tmux/tmux.conf""
alias trem='transmission-remote'
alias v="${EDITOR}"
alias wiki='nvim -c VimwikiIndex'
alias yt='youtube-dl --add-metadata --ignore-errors'
alias yta='youtube-dl --extract-audio --audio-format mp3 --embed-thumbnail'
alias z='zathura'

# Bookmarks
alias cdD="cd   "${HOME}/downloads"                        "
alias cdcac="cd "${XDG_CACHE_HOME:-${HOME}/.cache}"        "
alias cdcfg="cd  "${XDG_CONFIG_HOME:-${HOME}/.config}"      "
alias cdd="cd   "${HOME}/documents"                        "
alias cddt="cd  "${XDG_DATA_HOME:-${HOME}/.local/share}"   "
alias cdh="cd   "${HOME}"                                  "
alias cdmm="cd   "${HOME}/music"                            "
alias cdmn='cd  /mnt                                       '
alias cdp='cd   /usr/ports                                 '
alias cdpp="cd  "${HOME}/pictures"                         "
alias cdsc="cd  "${HOME}/.local/bin"                       "
alias cdsrc="cd "${HOME}/.local/src"                       "
alias cdtt="cd   "${HOME}/tmp"                              "
alias cdvv="cd  "${HOME}/videos"                          "

#
# Prompt
#

_ps1_user()
{
	case "${UID}" in
	'0')
		# Red root name
		printf '\\[\033[31m\\]%s\\[\033[00m\\]' "${USER}"
		;;
	*)
		# Yellow user name
		printf '\\[\033[33m\\]%s\\[\033[00m\\]' "${USER}"
		;;
	esac
}

_ps1_pwd()
{
	case "${PWD}" in
	"${HOME}"*)
		printf '\\[\033[33m\\]~%s\\[\033[00m\\]' "${PWD#${HOME}}"
		;;
	*)
		printf '\\[\033[33m\\]%s\\[\033[00m\\]' "${PWD}"
		;;
	esac
}

_ps1_exit_status()
{
	case "$1" in
	'0')
		# Green prompt
		printf '\\[\033[32m\\]%s\\[\033[00m\\]' "${ps1s}"
		;;
	*)
		# Red prompt
		printf '\\[\033[31m\\](%s) %s\\[\033[00m\\]' "$1" "${ps1s}"
		;;
	esac
}

# we may have su'ed so reset these
USER="$(id -un)"
UID="$(id -u)"
case "${UID}" in
'0')
	ps1s='# '
	;;
*)
	ps1s='$ '
esac
hostname="${HOSTNAME:-$(uname -n)}"
host="${hostname%%.*}"

PS1="\$(_ps1_user)\[\033[32m\]@\[\033[34m\]\${host}\[\033[00m\] \$(_ps1_pwd)
\$(_ps1_exit_status \$?)"
PS2='> '
PS3='#? '
PS4='+ '

#
# Functions
#

# Fuzzy edit config files.
fec()
{
	find "${XDG_CONFIG_HOME:-${HOME}/.config}" \
	    -type f -maxdepth 3 \
	    \! -name '*db*' \
	    \! -name '*log*' \
	    \! -name '*pid*' \
	    \! -name '*sql*' \
	    \! -path '*GIMP*' \
	    \! -path '*libreoffice*' \
	    \! -path '*mpv/watch_later*' \
	    \! -path '*plugin*' \
	    \! -path '*stat*' \
	    -print0 \
	    | fzf --read0 --print0 -i -0 -1 -m -d 'config/' --with-nth='2..' \
	        --header='Fuzzy edit config files.' \
	    | xargs -0 -r ${EDITOR:-vi}
}

# Fuzzy edit scripts
fes()
{
	find "${HOME}/.local/bin/" "${HOME}/.local/lib/" -type f -print0 \
	    | fzf --read0 --print0 -i -0 -1 -m -d 'bin/|lib/' --with-nth='2..' \
	        --header='Fuzzy edit scripts.' \
	    | xargs -0 -r ${EDITOR:-vi}
}

# Fuzzy cmd history
fh()
{
	print -s "$(fc -l 1 \
	    | fzf --no-sort --tac \
	    | cut -f '2-')"
}

# cd on quit in nnn
n()
{
	# Block nesting of nnn in subshells
	if [ -n "${NNNLVL}" ] && [ "${NNNLVL:-0}" -ge 1 ]; then
		printf 'nnn is already running\n'
		return
	fi

	# To cd on quit only on ^G
	NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"

	nnn "$@"

	if [ -f "${NNN_TMPFILE}" ]; then
		. "${NNN_TMPFILE}"
		rm -f "${NNN_TMPFILE}" > /dev/null
	fi
}

# Generate and view port diff
portsdiff()
{
	cvs diff > "/usr/ports/mystuff/${PWD##*/}.diff"
	less "/usr/ports/mystuff/${PWD##*/}.diff"
}

# View port diff
portslessdiff()
{
	less "/usr/ports/mystuff/${PWD##*/}.diff"
}

# Grep in port Makefiles
portsgrep()
{
	cd /usr/ports && grep "$@" ./*/*/Makefile ./*/*/*/Makefile
}

# Shellcheck all scripts
sc()
{
	find "${HOME}/.local/bin/" "${HOME}/.local/lib/" -type f \
	    -exec shellcheck {} +
}

;;
#
# We are non-interactive
#
*)
# Do nothing
;;
esac

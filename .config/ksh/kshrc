#!/bin/sh

#
# .kshrc for desktop
#

case "$-" in
#
# We are interactive
#
*i*)

#
# Ksh setting
#

set -o vi
set -o vi-tabcomplete

# History
HISTFILE="${XDG_CONFIG_HOME:-${HOME}/.config}/ksh/ksh_history"
HISTSIZE='5000'
HISTCONTROL='ignoredups:ignorespace'

#
# Ksh completions
#

ksh_comp_file="${XDG_CONFIG_HOME:-${HOME}/.config}/ksh/ksh_completion"
if [ -r "${ksh_comp_file}" ]; then
	. "${ksh_comp_file}" 
fi

#
# Aliases
#

# Base utils
alias cls='clear'
alias cmpr='diff -uNp'
alias cp='cp -iv'
alias df='df -h'
alias du='du -ch'
alias ll='ls -aFhl'
alias lld='ls -dFhl'
alias mv='mv -iv'
alias p='ps -l'
alias pwd='pwd -P'
alias rm='rm -iv'

if [ -x "$(command -v nvi)" ]; then
	alias vi='nvi'
fi

# Ksh
alias bye='exit'
alias h='fc -l | more'
alias j='jobs'
alias logout='exit'
alias o='fg %-'
alias quit='exit'
alias r='fc -s'

# OpenBSD Ports
alias portsql='sqlite3 /usr/local/share/sqlports'
alias portslol='make 2>&1 | /usr/ports/infrastructure/bin/portslogger .'
alias portsrc='cd $(make show=WRKSRC)'

# Miscellaneous
alias bc='bc -l'
alias cb=' xclip -filter -selection clipboard'
alias cbk="git --git-dir=${HOME}/.dotfiles/ --work-tree=${HOME}"
alias cweb='wget --mirror --convert-links --adjust-extension --page-requisites --no-parent'
alias e="${EDITOR:-vi}"
alias g='git'
alias pg="${PAGER:-less}"
alias rsize='eval $(resize)'
alias ta='tmux new-session -A -s'
alias tad='ta default'
alias tb="${TERM_BROWSER:-lynx}"
alias tman='tmux split-window -h -l 82 man'
alias trem='transmission-remote'
alias yt='youtube-dl --add-metadata --ignore-errors'
alias yta='youtube-dl --extract-audio --audio-format mp3 --embed-thumbnail'

# Bookmarks
alias cddd="cd  "${HOME}/downloads"                        "
alias cdcac="cd "${XDG_CACHE_HOME:-${HOME}/.cache}"        "
alias cdcfg="cd "${XDG_CONFIG_HOME:-${HOME}/.config}"      "
alias cddc="cd  "${HOME}/documents"                        "
alias cddt="cd  "${XDG_DATA_HOME:-${HOME}/.local/share}"   "
alias cdhh="cd  "${HOME}"                                  "
alias cdmm="cd  "${HOME}/music"                            "
alias cdmn='cd  /mnt                                       '
alias cdp='cd   /usr/ports                                 '
alias cdpp="cd  "${HOME}/pictures"                         "
alias cdsc="cd  "${HOME}/.local/bin"                       "
alias cdsrc="cd "${HOME}/.local/src"                       "
alias cdtt="cd  "${HOME}/tmp"                              "
alias cdvv="cd  "${HOME}/videos"                           "

# doas
alias pls='doas'
alias arp-scan='pls arp-scan'
alias cdio='pls cdio'
alias pvi='pls vi'
alias rcctl='pls rcctl'

#
# Prompt
#

_ps1_user()
{
	case "${UID}" in
	'0')
		# Red root name
		printf '\\[\033[31m\\]%s\\[\033[00m\\]' "${USER}"
		;;
	*)
		# Yellow user name
		printf '\\[\033[33m\\]%s\\[\033[00m\\]' "${USER}"
		;;
	esac
}

_ps1_pwd()
{
	case "${PWD}" in
	"${HOME}"*)
		printf '\\[\033[33m\\]~%s\\[\033[00m\\]' "${PWD#${HOME}}"
		;;
	*)
		printf '\\[\033[33m\\]%s\\[\033[00m\\]' "${PWD}"
		;;
	esac
}

_ps1_exit_status()
{
	case "$1" in
	'0')
		# Green prompt
		printf '\\[\033[32m\\]%s\\[\033[00m\\]' "${ps1s}"
		;;
	*)
		# Red prompt
		printf '\\[\033[31m\\](%s) %s\\[\033[00m\\]' "$1" "${ps1s}"
		;;
	esac
}

# we may have su'ed so reset these
USER="$(id -un)"
UID="$(id -u)"
case "${UID}" in
'0')
	ps1s='# '
	;;
*)
	ps1s='$ '
esac
hostname="${HOSTNAME:-$(uname -n)}"
host="${hostname%%.*}"

PS1="\$(_ps1_user)\[\033[32m\]@\[\033[34m\]\${host}\[\033[00m\] \$(_ps1_pwd)
\$(_ps1_exit_status \$?)"
PS2='> '
PS3='#? '
PS4='+ '

#
# Functions
#

# Fuzzy edit config files.
fec()
{
	find "${XDG_CONFIG_HOME:-${HOME}/.config}"                           \
	    -type f -maxdepth 3                                              \
	    \! -name '*db*'                                                  \
	    \! -name '*log*'                                                 \
	    \! -name '*pid*'                                                 \
	    \! -name '*sql*'                                                 \
	    \! -path '*GIMP*'                                                \
	    \! -path '*calibre*'                                             \
	    \! -path '*libreoffice*'                                         \
	    \! -path '*mpv/watch_later*'                                     \
	    \! -path '*plugin*'                                              \
	    \! -path '*stat*'                                                \
	    -print0                                                          \
	    | fzf --read0 --print0 -i -0 -1 -m -d 'config/' --with-nth='2..' \
	        --header='Fuzzy edit config files.'                          \
	    | xargs -0 -r ${EDITOR:-vi}
}

# Fuzzy edit scripts
fes()
{
	find "${HOME}/.local/bin/" "${HOME}/.local/lib/" -type f -print0       \
	    | fzf --read0 --print0 -i -0 -1 -m -d 'bin/|lib/' --with-nth='2..' \
	        --header='Fuzzy edit scripts.'                                 \
	    | xargs -0 -r ${EDITOR:-vi}
}

# Fuzzy cmd history
fh()
{
	print -s "$(fc -l 1       \
	    | fzf --no-sort --tac \
	    | cut -f '2-')"
}

# cd on quit in nnn
n()
{
	# Block nesting of nnn in subshells
	if [ -n "${NNNLVL}" ] && [ "${NNNLVL:-0}" -ge 1 ]; then
		printf 'nnn is already running\n'
		return
	fi

	# To cd on quit only on ^G
	NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"

	nnn "$@"

	if [ -f "${NNN_TMPFILE}" ]; then
		. "${NNN_TMPFILE}"
		rm -f "${NNN_TMPFILE}" > /dev/null
	fi
}

# Generate and view port diff
portsdiff()
{
	cvs diff > "/usr/ports/mystuff/${PWD##*/}.diff"
	less "/usr/ports/mystuff/${PWD##*/}.diff"
}

# View port diff
portslessdiff()
{
	less "/usr/ports/mystuff/${PWD##*/}.diff"
}

# Grep in port Makefiles
portsgrep()
{
	cd /usr/ports && grep "$@" ./*/*/Makefile ./*/*/*/Makefile
}

# Shellcheck all scripts
sc()
{
	find "${HOME}/.local/bin/" "${HOME}/.local/lib/" -type f \
	    -exec shellcheck --exclude=SC2155 {} +
}

# search word in wordnet
sw()
{
	wn "$*" -over
	return 0
}

z()
{
	zathura "$@" &
}

;;
#
# We are non-interactive
#
*)
# Do nothing
;;
esac


#!/bin/sh
# Program:
# *   Gives a dmenu prompt to mount unmounted drives. If
#     they're in /etc/fstab, they'll be mounted automatically. Otherwise,
#     you'll be prompted to give a mountpoint from already existsing
#     directories. If you input a novel directory, it will prompt you to
#     create that directory.
# Dependency:
# *   dmenu(1)
# *   mount.exfat-fuse(1)
# *   prompt.sh
# *   simple-mtpfs(1)
# Author:
# *   Chang, Chu-Kuan <cckuan@changchukuan.name>

#
# Proper
#

# shellcheck source=/dev/null
. prompt.sh

readonly progname="$(basename "$0")"

asktype()
{
	choice="$(printf 'MTP\nUMS' | dmenu -i -p "Mount a MTP or UMS device?")" || exit 2
	case "${choice}" in
	'MTP')
		mountmtp "${mtp_info}"
		;;
	'UMS')
		mountums "${ums_info}"
		;;
	esac
}

check_mount()
{
	d="$1" # device
	m="$2" # mount point

	if mount | grep -q "${d}.*${m}"; then
		notify "${d} mounted to ${m}"
	else
		notify "Failed mounting ${d} to ${m}"
	fi
}

lsblock()
{
	disks="$(
		sysctl -n hw.disknames \
		    | tr ',' '\n' \
		    | cut -d ':' -f 1
	)"

	# 'or' collection of mounted partitions
	already_mounted_blocks_regex="$(
		mount | cut -d ' ' -f 1 | paste -sd '|' -
	)"

	for disk in ${disks}; do
		doas -n disklabel -h "${disk}" 2>/dev/null \
		| awk -v disk="${disk}" '
			/^label: / {
				sub("^label: ", "", $0);
				sub("[[:blank:]]*$", "", $0);
				label = $0;
			}

			/^total sectors: / {
				total_bytes = $NF;
			}

			/^[[:blank:]]+[[:alpha:]]:/ {
				if ($1 == "c:" || $4 == "swap" || $4 == "RAID") {
					next;
				}
				printf("/dev/%s%c %10s %10s (%s, total bytes: %s)\n",
				    disk, $1, $2, $4, label, total_bytes);
			}
		' \
		| grep -vE "${already_mounted_blocks_regex}"
	done
}

get_mount_point() {
	already_mounted="$(
		mount \
		    | awk '/.*\/mnt.*/ { printf("-not ( -path %s -prune ) ", $3) }'
	)"

	# shellcheck disable=SC2086
	mp="$(
		find /mnt -type d -maxdepth 3 ${already_mounted} -print 2>/dev/null \
		    | dmenu -l 15 -p 'Type in mount point:'
	)"

	if [ -d "${mp}" ]; then
		printf '%s' "${mp}"
		return 0
	else
		notify "${mp} does not exist."
		return 1
	fi
}

mountums() {
	chosen="$(
		printf '%s' "$1" \
		    | dmenu -l 15 -p 'Mount which UMS device?' \
		    | tr -s ' '
	)"
	chosen_block="$(  printf '%s' "${chosen}"   | cut -d ' ' -f 1)"
	chosen_size="$(   printf '%s' "${chosen}"   | cut -d ' ' -f 2)"
	chosen_fstype="$( printf '%s' "${chosen}"   | cut -d ' ' -f 3)"

	if [ "${chosen_fstype}" = 'NTFS' ]; then
		chosen_fstype="$(
			printf 'exFAT\nNTFS' \
			    | dmenu -l 15 -p 'Which File system?' \
		)"
	fi

	if [ -z "${chosen_block}" ] \
	    || [ -z "${chosen_size}" ] \
	    || [ -z "${chosen_fstype}" ]; then
		exit 1
	fi

	mount_point="$(get_mount_point)" || exit 3

	prompt -x "Mount ${chosen_block} (${chosen_fstype}, ${chosen_size}) to ${mount_point} ?" \
	    || exit 0

	doas -n mount "${chosen_block}" 2>/dev/null \
	    && notify "${chosen_block} mounted." \
	    && exit 0

	case "${chosen_fstype}" in
	'4.2BSD')
		doas -n mount_ffs "${chosen_block}" "${mount_point}"
		;;
	'cd9660')
		doas -n mount_cd9660 "${chosen_block}" "${mount_point}"
		;;
	'exFAT')
		doas -n mount.exfat-fuse -o "gid=$(id -g),uid=$(id -u)" \
		    "${chosen_block}" "${mount_point}"
		chosen_block='fusefs'
		;;
	'MSDOS')
		doas -n mount_msdos -g "$(id -g)" -u "$(id -u)" \
		    "${chosen_block}" "${mount_point}"
		;;
	'NTFS')
		doas -n mount_ntfs -g "$(id -g)" -u "$(id -u)" \
		    "${chosen_block}" "${mount_point}"
		;;
	*)
		notify 'Unknown filesystem.'
		exit 1
		;;
	esac

	sleep 1
	check_mount "${chosen_block}" "${mount_point}"
}

mountmtp()
{
	chosen="$(
		printf '%s' "$1" \
		    | dmenu -l 15 -p 'Mount which MTP device?' \
		    | tr -s ' '
	)"
	chosen_num="$(printf '%s' "${chosen}" | cut -d ':' -f 1)"
	chosen_label="$(printf '%s' "${chosen}" | cut -d ' ' -f '2-')"

	if [ -z "${chosen_num}" ] || [ -z "${chosen_label}" ]; then
		exit 1
	fi

	mount_point="$(get_mount_point)" || exit 1

	prompt -x "Mount ${chosen_num} (${chosen_label}) to ${mount_point} ?" \
	    || exit 0

	doas -n simple-mtpfs --device "${chosen_num}" "${mount_point}" -o uid=1000 -o gid=1000 -o allow_other
	sleep 1
	check_mount 'fusefs' "${mount_point}"
}

notify()
{
	notify-send --urgency=normal --icon=drive-harddisk-usb \
	    --hint="string:synchronous:${progname}" "${progname}" \
	    "$@"
}

readonly ums_info="$(lsblock)"
readonly mtp_info="$(doas -n simple-mtpfs --list-devices 2> /dev/null)"
info_bitmap='' # mtp, ums

if [ -n "${mtp_info}" ]; then
	info_bitmap='1'
else
	info_bitmap='0'
fi

if [ -n "${ums_info}" ]; then
	info_bitmap="${info_bitmap}1"
else
	info_bitmap="${info_bitmap}0"
fi

case "${info_bitmap}" in
'00')
	notify 'No UMS or MTP device detected.'
	exit 0
	;;
'10')
	mountmtp "${mtp_info}"
	;;
'01')
	mountums "${ums_info}"
	;;
'11')
	asktype
	;;
*)
	notify "Invalid \${info_bitmap} ${info_bitmap}"
	exit 1
	;;
esac

